crystal_doc_search_index_callback({"repository_name":"DanielcoderX/dtd","body":"# dtd\n\nThis module contains a method to calculate the difference between two dates in days, months, and years.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     dtd:\n       github: danielcoderx/dtd\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"dtd\"\ndate1 = \"2022/04/30\"\ndate2 = \"2022/05/01\"\nresult = Dtd.date_diff(date1, date2)\n\nputs \"Difference: \\#{result[\"years\"]} years, \\#{result[\"months\"]} months, \\#{result[\"days\"]} days\"\n```\n\n## TODO\n- Add time difference \n- You can say :) just open an issue\n\n## Contributing\n\n1. Fork it (<https://github.com/danielcoderx/dtd/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [danielcoderx](https://github.com/danielcoderx) - creator and maintainer","program":{"html_id":"DanielcoderX/dtd/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"DanielcoderX/dtd","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"DanielcoderX/dtd/Dtd","path":"Dtd.html","kind":"module","full_name":"Dtd","name":"Dtd","abstract":false,"locations":[{"filename":"src/dtd.cr","line_number":2,"url":"/blob/refs/heads/main/%FILE%"}],"repository_name":"DanielcoderX/dtd","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":"The current version of the Dtd module.","summary":"<p>The current version of the Dtd module.</p>"}],"doc":"Module Dtd provides methods for calculating the difference between two dates.","summary":"<p>Module Dtd provides methods for calculating the difference between two dates.</p>","class_methods":[{"html_id":"date_diff(date1:String,date2:String,time_zone:String=\"UTC\"):Hash(String,Int32)|Hash(String,String)-class-method","name":"date_diff","doc":"<h3>Calculates the difference between two dates in days, months, and years.</h3>\n\n&nbsp;&nbsp;&nbsp;&nbsp;date1     - The first date in the format YYYY/MM/DD (String).\n\n&nbsp;&nbsp;&nbsp;&nbsp;date2     - The second date in the format YYYY/MM/DD (String).\n\n&nbsp;&nbsp;&nbsp;&nbsp;time_zone - The time zone in which the dates are specified (String, default: \"UTC\").\n\n<b>Examples:</b>\n\n  &nbsp;&nbsp;&nbsp;Dtd.date_diff(\"2022/04/30\", \"2022/05/01\")\n  &nbsp;&nbsp;=> {\"years\" => 0, \"months\" => 0, \"days\" => 1}\n\nReturns a Hash containing the difference in years, months, and days, or an error Hash.</br>\n&nbsp;If the difference is positive, the Hash contains the keys \"years\", \"months\", and \"days\"\nwith their respective integer values.</br> &nbsp;If date2 is before date1, the Hash contains the key\n\"error\" with the value \"Date 2 is before date 1.\".</br> &nbsp;If the difference is 0, the Hash\ncontains the keys \"years\", \"months\", and \"days\" with the value 0 for each.","summary":"<h3>Calculates the difference between two dates in days, months, and years.</h3>","abstract":false,"args":[{"name":"date1","external_name":"date1","restriction":"String"},{"name":"date2","external_name":"date2","restriction":"String"},{"name":"time_zone","default_value":"\"UTC\"","external_name":"time_zone","restriction":"String"}],"args_string":"(date1 : String, date2 : String, time_zone : String = \"UTC\") : Hash(String, Int32) | Hash(String, String)","args_html":"(date1 : String, date2 : String, time_zone : String = <span class=\"s\">&quot;UTC&quot;</span>) : Hash(String, Int32) | Hash(String, String)","location":{"filename":"src/dtd.cr","line_number":24,"url":"/blob/refs/heads/main/%FILE%"},"def":{"name":"date_diff","args":[{"name":"date1","external_name":"date1","restriction":"String"},{"name":"date2","external_name":"date2","restriction":"String"},{"name":"time_zone","default_value":"\"UTC\"","external_name":"time_zone","restriction":"String"}],"return_type":"Hash(String, Int32) | Hash(String, String)","visibility":"Public","body":"time_zone = Time::Location.load(time_zone)\ndate1_time = Time.parse(date1, \"%Y/%m/%d\", time_zone)\ndate2_time = Time.parse(date2, \"%Y/%m/%d\", time_zone)\ndays_diff = (date2_time - date1_time) / 86400.seconds\nif days_diff.zero?\n  {\"years\" => 0, \"months\" => 0, \"days\" => 0}\nelse\n  if days_diff < 0\n    {\"error\" => \"Date 2 is before date 1.\"}\n  else\n    years = (days_diff / 365.25).to_i\n    days_diff = days_diff % 365.25\n    months = (days_diff / 30.44).to_i\n    days = (days_diff % 30.44).to_i\n    {\"years\" => years, \"months\" => months, \"days\" => days}\n  end\nend\n"}}]}]}})